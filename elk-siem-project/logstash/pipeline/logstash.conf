input {
  file {
    path => "/logs/auth.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "auth"
  }
  
  file {
    path => "/logs/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "apache"
  }
}

filter {
  if [type] == "auth" {
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:program}: %{GREEDYDATA:auth_message}" 
      }
    }
    
    if "Failed password" in [message] {
      mutate {
        add_field => { "event_type" => "failed_login" }
        add_field => { "severity" => "high" }
      }
    }
    
    if "Accepted password" in [message] {
      mutate {
        add_field => { "event_type" => "successful_login" }
        add_field => { "severity" => "low" }
      }
    }
  }
  
  if [type] == "apache" {
    grok {
      match => { 
        "message" => "%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:bytes}" 
      }
    }
    
    if "OR" in [request] {
      mutate {
        add_field => { "attack_type" => "sql_injection" }
        add_field => { "severity" => "critical" }
      }
    }
    
    if [response_code] == "403" {
      mutate {
        add_field => { "event_type" => "blocked_request" }
        add_field => { "severity" => "high" }
      }
    }
  }
  
  date {
    match => ["timestamp", "MMM dd HH:mm:ss", "dd/MMM/yyyy:HH:mm:ss Z"]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "siem-logs-%{+YYYY.MM.dd}"
  }
  
  stdout { codec => rubydebug }
}

